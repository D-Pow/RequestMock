name: Client - Build
description: Builds the front-end


inputs:
  GITHUB_TOKEN:
    description: GitHub token required for pushing code with incremented app version.
    required: true
  clientVersion:
    description: "Sets (or increments if 'true') client app version"
    required: false
    default: ""


runs:
  using: composite
  steps:
    - name: Checkout repository branch
      uses: actions/checkout@v3

    - name: Client - Set CI/CD IDs
      id: client-set-ci-cd-ids
      uses: ./.github/workflows/actions/cache-name

    - name: CI - Output cache ID
      id: ci-export-cache-id
      shell: bash
      run: |
        echo "CLIENT_CACHE_ID=${{ env.CLIENT_CACHE_ID }}" >> $GITHUB_OUTPUT

    # Downloads previous runs' cache of content like node_modules/ for faster re-runs
    - name: Client - Download cache
      id: client-build-download-cache
      uses: actions/cache/restore@v3
      continue-on-error: true
      with:
        path: |
          node_modules
          dist
          coverage
          package.json
          package-lock.json
        key: ${{ env.CLIENT_CACHE_ID }}

    # See:
    #   - Cache GitHub Workflow action docs: https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
    #   - Cache-restore between workflows: https://github.com/actions/cache#example-cache-workflow
    # Only run next step if cache-hit failed.
    # For some reason, the recommended logic from the docs doesn't work:
    # - if: ${{ steps.client-cache.outputs.cache-hit != 'true' }}
    # Instead, use `failure()` as suggested here: http://chamindac.blogspot.com/2020/08/how-to-run-github-actions-step-when.html#:~:text=run%20on%20failure-,if%3A%20%24%7B%7B%20failure()%20%7D%7D,-run%3A%20%7C
    - name: Client - Re-init
      if: ${{ failure() || steps.client-set-ci-cd-ids.outputs.cache-hit != 'true' }}
      uses: ./.github/workflows/actions/client/init

    - name: Client - Build and optionally increment app version
      if: ${{ failure() || steps.client-set-ci-cd-ids.outputs.cache-hit != 'true' }}
      id: client-build
      shell: bash
      run: |
        npm run build

    - name: Client - Cache build artifacts
      id: client-build-cache
      uses: actions/cache/save@v3
      with:
        path: |
          node_modules
          dist
          coverage
          package.json
          package-lock.json
        key: ${{ env.CLIENT_CACHE_ID }}

    - name: Generating coverage badges
      uses: jpb06/jest-badges-action@latest
        with:
          coverage-summary-path: ./coverage/coverage-final.json
          output-folder: ./coverage/badges
